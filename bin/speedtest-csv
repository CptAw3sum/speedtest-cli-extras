#!/usr/bin/env bash
###########################################################################
# Copyright (c) 2014-2016 Henrik Bengtsson
# License: GPL (>= 2.1) [http://www.gnu.org/licenses/gpl.html]
###########################################################################
call="$0 $*"

# Character for separating values
# (commas are not safe, because some servers return speeds with commas)
sep=";"

# Temporary file holding speedtest-cli output
user=$USER
if test -z $user; then
  user=$USERNAME
fi
log=/tmp/$user/speedtest-csv.log

# Local functions
function mecho() { echo "$@" 1>&2; }
function mdebug() { mecho "[DEBUG]: $@"; }
function str_extract() {
 pattern=$1
 # Extract
 res=`grep "$pattern" $log | sed "s/$pattern//g"`
 # Drop trailing ...
 res=`echo $res | sed 's/[.][.][.]//g'`
 # Trim
 res=`echo $res | sed 's/^ *//g' | sed 's/ *$//g'`
 echo $res
}

debug=FALSE
header=FALSE
standardize=FALSE

# Parse command-line options
while [[ $# > 0 ]]; do
    opt=$1
    if test "$opt" == "--header"; then
	header=TRUE
    elif test "$1" == "--standardize"; then
        standardize=TRUE
    elif test "$1" == "--debug"; then
        debug=TRUE
    fi
    shift
done

if [[ $debug == TRUE ]]; then
    mdebug "call: $call"
    mdebug "header: $header"
    mdebug "standardize: $standardize"
fi

# Display header?
if [[ $header == TRUE ]]; then
    mdebug "generating header"
  start="start"
  stop="stop"
  from="from"
  from_ip="from_ip"
  server="server"
  server_dist="server_dist"
  server_ping="server_ping"
  download="download"
  upload="upload"
  share_url="share_url"
else
  mkdir -p `dirname $log`

  start=`date +"%Y-%m-%d %H:%M:%S"`

  if test -n "$SPEEDTEST_CSV_SKIP" && test -f "$log"; then
    # Reuse existing results (useful for debugging)
    mecho "** Reusing existing results: $log"
  else
    # Query Speedtest
    speedtest-cli --share > $log
  fi
  
  stop=`date +"%Y-%m-%d %H:%M:%S"`
  
  # Parse
  from=`str_extract "Testing from "`
  from_ip=`echo $from | sed 's/.*(//g' | sed 's/).*//g'`
  from=`echo $from | sed 's/ (.*//g'`
  
  server=`str_extract "Hosted by "`
  server_ping=`echo $server | sed 's/.*: //g'`
  server=`echo $server | sed 's/: .*//g'`
  server_dist=`echo $server | sed 's/.*\\[//g' | sed 's/\\].*//g'`
  server=`echo $server | sed 's/ \\[.*//g'`
  
  download=`str_extract "Download: "`
  upload=`str_extract "Upload: "`
  share_url=`str_extract "Share results: "`
fi

# Standardize units?
if [[ $standardize == TRUE ]]; then
  download=`echo $download | sed 's/Mbits/Mbit/'`
  upload=`echo $upload | sed 's/Mbits/Mbit/'`
fi
  
# Output CSV results
echo $start$sep$stop$sep$from$sep$from_ip$sep$server$sep$server_dist$sep$server_ping$sep$download$sep$upload$sep$share_url
